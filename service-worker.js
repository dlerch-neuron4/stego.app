const CACHE_NAME="cache-v1";const urlsToCache=["pyodide-0.26.2/pyodide-lock.json","pyodide-0.26.2/pyodide.js","pyodide-0.26.2/pyodide.asm.wasm","pyodide-0.26.2/openblas-0.3.26.zip","pyodide-0.26.2/python_stdlib.zip","pyodide-0.26.2/packaging-23.2-py3-none-any.whl","pyodide-0.26.2/micropip-0.6.0-py3-none-any.whl","pyodide-0.26.2/scipy-1.12.0-cp312-cp312-pyodide_2024_0_wasm32.whl","pyodide-0.26.2/numpy-1.26.4-cp312-cp312-pyodide_2024_0_wasm32.whl","pyodide-0.26.2/pillow-10.2.0-cp312-cp312-pyodide_2024_0_wasm32.whl","pyodide-0.26.2/reedsolo-2.0.10-py3-none-any.whl","pyodide-0.26.2/pycryptodome-3.20.0-cp35-abi3-pyodide_2024_0_wasm32.whl"];self.addEventListener("install",function(event){event.waitUntil(caches.open(CACHE_NAME).then(function(cache){console.log("Files saved in cache");return cache.addAll(urlsToCache)}))});self.addEventListener("fetch",function(event){event.respondWith(caches.match(event.request).then(function(response){if(response){return response}return fetch(event.request)}))});self.addEventListener("activate",function(event){const cacheWhitelist=[CACHE_NAME];event.waitUntil(caches.keys().then(function(cacheNames){return Promise.all(cacheNames.map(function(cacheName){if(cacheWhitelist.indexOf(cacheName)===-1){console.log("Cache removed:",cacheName);return caches.delete(cacheName)}}))}))});